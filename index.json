[{"content":"通过hugo new posts生成的md文件\n","permalink":"https://mixleeli.github.io/mydoc/posts/a/","summary":"通过hugo new posts生成的md文件","title":"A"},{"content":"gitee中的静态页面管理系统 支持 Jekyll、Hugo、Hexo编译静态资源 将md文件自动变换成静态页面html 初步了解 自行 流程 hugo 安装与配置 编写md（准备已经编辑好的md、对其进行调整） 安装hugo的主题包 hugo 命令进行本地测试 hugo命令进行本地发布——\u0026gt;html文件及各种其他文件 git将本地发布的页面推送到远端 gitee pages中重新部署 安装hugo 安装过程非常简单。只需要下载合适你系统版本的 Hugo 二进制 。 更理想的是，为了更方便的使用，你应该把它安装到你的 PATH 环境变量所在的位置。 推荐下载extended版本 hugo_extended_0.100.1_Windows-64bit.zip 安装与配置 把hugo.exe放置到 C:\\Windows\\System32 内 测试hugo是否可以正常运行 在命令行里面 输入 hugo version hugo的基本命令 创建网站 创建一个新的文件夹\n打开命令行窗口\nSD@DESKTOP-0DCL18 MINGW64 ~/Desktop/hugo_new\r$ hugo new site myblog 自动生成了一堆文件、文件夹\n新建md文件或者使用原有的md文件 md文件一定要放置到content\\posts文件夹内\n新建md文件\nSD@DESKTOP-0DCL18 MINGW64 ~/Desktop/hugo_new\r$ hugo new posts/a.md\rError: Unable to locate config file or config directory. Perhaps you need to create a new site.\rRun `hugo help new` for details.\rSD@DESKTOP-0DCL18 MINGW64 ~/Desktop/hugo_new\r$ cd myblog\rSD@DESKTOP-0DCL18 MINGW64 ~/Desktop/hugo_new/myblog\r$ hugo new posts/a.md\rContent \u0026#34;C:\\\\Users\\\\SD\\\\Desktop\\\\hugo_new\\\\myblog\\\\content\\\\posts\\\\a.md\u0026#34; created 注意：需要到自己建立的website文件夹内再执行创建md的操作。\nmd文件内容最上面\n这些信息可以帮助hugo实现将md生成html的重要信息 已有的md文件，放入posts文件夹\n在文件头部增加相应的信息 hugo主题包的安装 papermod为例 下载主题 主题仓库 GitHub - adityatelange/hugo-PaperMod: A fast, clean, responsive Hugo theme. 示例仓库 GitHub - adityatelange/hugo-PaperMod at exampleSite 主要使用的是配置文件 config.yml 应用主题 将下载的主题包解压到themes文件夹内 编辑配置文件 修改主题名称 修改baseURL删除后面的目录名称 主题扩展 Hugo博客目录放在侧边 | PaperMod主题 | Sulv\u0026rsquo;s Blog (sulvblog.cn) hugo本地测试 开启本地服务命令 hugo server -D 浏览器输入 http://localhost:1313 hugo本地发布 发布的命令 hugo -D 发布后的文件在哪里 public文件夹 本地打开查看后发现有问题 看着不正常 需要修改配置文件里面的baseURL 根据自己的gitee pages里面的网站地址进行修改 http://mixlee.gitee.io/mytest 因为baseURL的原因，在本地是无法正常浏览效果的。 gitee仓库更新 ","permalink":"https://mixleeli.github.io/mydoc/posts/hugo%E9%9D%99%E6%80%81%E9%A1%B5%E9%9D%A2/","summary":"gitee中的静态页面管理系统 支持 Jekyll、Hugo、Hexo编译静态资源 将md文件自动变换成静态页面html 初步了解 自行 流程 hugo 安装与配置 编写md（准备已经编辑好的md、对其进行调整） 安装hugo的主题包 hugo 命令进行本地测试 hugo命令进行本地发布——\u0026gt;html文件及各种其他文件 git将本地发布的页面推送到远端 gitee pages中重新部署 安装hugo 安装过程非常简单。只需要下载合适你系统版本的 Hugo 二进制 。 更理想的是，为了更方便的使用，你应该把它安装到你的 PATH 环境变量所在的位置。 推荐下载extended版本 hugo_extended_0.100.1_Windows-64bit.zip 安装与配置 把hugo.exe放置到 C:\\Windows\\System32 内 测试hugo是否可以正常运行 在命令行里面 输入 hugo version hugo的基本命令 创建网站 创建一个新的文件夹\n打开命令行窗口\nSD@DESKTOP-0DCL18 MINGW64 ~/Desktop/hugo_new\r$ hugo new site myblog 自动生成了一堆文件、文件夹\n新建md文件或者使用原有的md文件 md文件一定要放置到content\\posts文件夹内\n新建md文件\nSD@DESKTOP-0DCL18 MINGW64 ~/Desktop/hugo_new\r$ hugo new posts/a.md\rError: Unable to locate config file or config directory. Perhaps you need to create a new site.","title":"hugo静态页面"},{"content":" js语句写在body、head和外部js文件中的区别是什么 自己搜到的结果：在head中所代表的functions只加载不执行，执行是在某一事件触发后才开始，在body中时直接加载并执行。引入单独的js文件可以降低网络传输量，提高代码复用性，便于维护和管理。例如：一个网站可能有很多页面需要引用某个javaScript函数，如果这个函数直接写在页面中，那每次加载页面时都将重复下载这部分代码。若引用单独的js文件，客户端第一次引用这个函数时就会下载js文件，后面再用直接引用本地缓存的js文件就行了。若需要修改某一函数，而这个函数在好多页面都用，偏偏又是都将代码写在了页面中，这是修改代码就成了简单的体力活了。若是引用的js文件就好多了，只需要修改一次就ok啦，既省时又省力。 上说relative是相对于它默认的位置而定位，但是慕课上说的是relative是相当于它的直接父元素而定位，这个怎么理解啊 遇到的问题：制作网页时，不能做到鼠标悬停时放大文字却不影响其他地方 解决方法：将需要放大的文字制作成盒子，在开始时把盒子的边框显示出来，观察文字放大时盒子的移动情况，最后得出结论，只用把盒子的高度宽度设置变大，在文字放大时不超出盒子的大小，就不会影响其他区域 console.log(is NaN(input));这个如何理解啊，这里的input是指从键盘中输入吗 【js小方法】isNaN，input中判断是数字_SQTTTTTTT的博客-CSDN博客_isnan判断是否是数字 感觉慕课上的网课看了之后，感觉收获很少 js与c语言哪里不同？ ","permalink":"https://mixleeli.github.io/mydoc/posts/w9%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/","summary":" js语句写在body、head和外部js文件中的区别是什么 自己搜到的结果：在head中所代表的functions只加载不执行，执行是在某一事件触发后才开始，在body中时直接加载并执行。引入单独的js文件可以降低网络传输量，提高代码复用性，便于维护和管理。例如：一个网站可能有很多页面需要引用某个javaScript函数，如果这个函数直接写在页面中，那每次加载页面时都将重复下载这部分代码。若引用单独的js文件，客户端第一次引用这个函数时就会下载js文件，后面再用直接引用本地缓存的js文件就行了。若需要修改某一函数，而这个函数在好多页面都用，偏偏又是都将代码写在了页面中，这是修改代码就成了简单的体力活了。若是引用的js文件就好多了，只需要修改一次就ok啦，既省时又省力。 上说relative是相对于它默认的位置而定位，但是慕课上说的是relative是相当于它的直接父元素而定位，这个怎么理解啊 遇到的问题：制作网页时，不能做到鼠标悬停时放大文字却不影响其他地方 解决方法：将需要放大的文字制作成盒子，在开始时把盒子的边框显示出来，观察文字放大时盒子的移动情况，最后得出结论，只用把盒子的高度宽度设置变大，在文字放大时不超出盒子的大小，就不会影响其他区域 console.log(is NaN(input));这个如何理解啊，这里的input是指从键盘中输入吗 【js小方法】isNaN，input中判断是数字_SQTTTTTTT的博客-CSDN博客_isnan判断是否是数字 感觉慕课上的网课看了之后，感觉收获很少 js与c语言哪里不同？ ","title":"w9问题汇总"}]